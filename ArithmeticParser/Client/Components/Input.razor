@inject ILexer _lexer
@inject IParser _parser

<div class="row text-center">
    <div class="container">
        <input class="col-6" type="text" @bind-value="text" @bind-value:event="oninput" />
        <label class="col-6">@text</label>
    </div>

    <br />

    <button class="col-12 btn btn-outline-secondary" @onclick="GrabAndParseTokens">Enter</button>

    @if (tokens.Count > 0)
    {
        <div class="container col-6 text-center">
            <h3 class="col-6">Lexer Output</h3>
            @foreach (var token in tokens)
            {
                <label class="col-12">@token.Type @token.Value</label>
            }
        </div>
    }
    <div class="container col-6 text-center">
        <h3 class="col-6">Sum</h3>
        <label class="col-12">@parserOutput</label>
    </div>
</div>

@code {
    private string text;
    private string parserOutput;
    private bool outputLexer = false;
    List<Token> tokens = new List<Token>();
    //Lexer lexer = new Lexer();
    //Parser parser = new Parser();

    void GrabAndParseTokens()
    {
        try
        {
            GrabTokens();
            ParseTokens();
        }
        catch (Exception exception)
        {
            parserOutput = exception.Message;
            Console.WriteLine(parserOutput);
        }
    }

    void GrabTokens()
    {
        Console.WriteLine(text);
        tokens = _lexer.GrabTokens(text);
    }

    void ParseTokens()
    {
        parserOutput = _parser.ParseTokens(tokens).ToString();
    }
}
