@inject ILexer _lexer
@inject IParser _parser

<div class="row">
    <div class="form-group">
        <label class="col-md-6">@text</label>
        <input class="col-md-6" type="text" @bind-value="text" @bind-value:event="oninput" />
    </div>
    <br />
</div>
<div class="row">
    <button class="col-md-2 btn btn-primary btn-lg" @onclick="GrabAndParseTokens">Enter</button>
</div>
<br />

<br />

<div class="row">
    @if (tokens.Count > 0)
    {
        <div class="col-md-4">
            <h3>Lexer Output</h3>
            @foreach (var token in tokens)
            {
                <label>@token.Type @token.Value</label>
                <br />
            }
        </div>
    }
    <div class="col-md-4">
        <h3>Sum</h3>
        <label>@parserOutput</label>
    </div>
</div>

@code {
    private string text;
    private string parserOutput;
    private bool outputLexer = false;
    List<Token> tokens = new List<Token>();
    //Lexer lexer = new Lexer();
    //Parser parser = new Parser();

    void GrabAndParseTokens()
    {
        try
        {
            GrabTokens();
            ParseTokens();
        }
        catch (Exception exception)
        {
            parserOutput = exception.Message;
            Console.WriteLine(parserOutput);
        }
    }

    void GrabTokens()
    {
        Console.WriteLine(text);
        tokens = _lexer.GrabTokens(text);
    }

    void ParseTokens()
    {
        parserOutput = _parser.ParseTokens(tokens).ToString();
    }
}
